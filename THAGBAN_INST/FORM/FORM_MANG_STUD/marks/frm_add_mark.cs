using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Data.Entity.Migrations;
using System.Drawing;
using System.Linq;
using System.Runtime.Remoting.Contexts;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using THAGBAN_INST.adl;
using THAGBAN_INST.DATA;

namespace THAGBAN_INST.FORM.FRM_MANG_STUD.marks
{
    public partial class frm_add_mark : DevExpress.XtraEditors.XtraForm
    {

        db_max_instEntities con = new db_max_instEntities();
        tost toast = new tost();
        dialge dialge = new dialge();
        adl.method methods  = new adl.method();
        public int id=0;
        public int stud_id = 0;
        public int cours_id = 0;
        public int year_id = 0;

        public string cours_name;
        public string cours_desc;
        public int spaicla_id=0;
        public int term_id;
        public string spic_year;
        DateTime mark_date;


        public frm_add_mark()
        {
            InitializeComponent();
        }

        private void btn_delete_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void frm_add_job_Load(object sender, EventArgs e)
        {
           
            if (id != 0)
            {
               TBL_MARKS tbl= con.TBL_MARKS.Find(id);
                // txt_cours_name.Text = tbl.COURS_NAME.ToString();

                stud_id = Convert.ToInt32(tbl.STUD_ID);
                spaicla_id= Convert.ToInt32(tbl.STUD_ID);
                txt_mark_date.Text=tbl.MARK_YEAR.ToString();
                txt_mark_value.Text=tbl.MARK_COURS.ToString();
                cours_id = Convert.ToInt32(tbl.COURS_ID);
                MessageBox.Show(cours_id.ToString());

                get_info();
                MessageBox.Show(cours_id.ToString());
            }
            else
            {
                get_data();
            }
           
        }
        public void get_data()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            db_max_instEntities dbContext = new db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TBL_STUDENTS.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                com_stud.DataSource = dbContext.TBL_STUDENTS.Local.ToBindingList();
                com_stud.DisplayMember = "STUD_NAME";
                com_stud.ValueMember = "STUD_ID";
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            //com_cours.DataSource = con.TBL_COURS.ToList();
            //com_cours.DisplayMember = "COURS_NAME";
            //com_cours.ValueMember = "COURS_ID";

        }
        void clear()
        {
            spaicla_id =0;
            id = 0;
            com_cours.Text = "";
            com_spiacl.Text = "";
            com_term.Text="";
            com_year.Text = "";
            cours_id = 0;
            stud_id = 0;
            txt_mark_value.Text = "";



        }
        bool is_empty()
        {
            if ( com_cours.Text != "" && com_spiacl.Text != "" && txt_mark_value.Text!="")
            {
                return false;
            }
            else
                return true;

        }
        void get_info()
        {


            com_stud.DataSource = con.TBL_STUDENTS.ToList();
            com_stud.DisplayMember = "STUD_NAME";
            com_stud.ValueMember = "STUD_ID";
            com_stud.SelectedValue = stud_id;

            /////
            ///

            var temp1 = con.TBL_SPECIAL.Join(con.TBL_STUD_SPEC.Where(w => w.STUD_ID == stud_id), sp => sp.SPEC_ID, stud_spe => stud_spe.TBL_SPECIAL.SPEC_ID, (spiec, stud_spic) => new
            {
                spiec.SPEC_NAME,
                spiec.SPEC_ID,

            }).ToList();
            if (temp1.Count > 0)
            {
                com_spiacl.DataSource = temp1;
                com_spiacl.DisplayMember = "SPEC_NAME";
                com_spiacl.ValueMember = "SPEC_ID";
                if(id!=0)
                com_spiacl.SelectedValue = spaicla_id;
            }
            else
            {
                com_spiacl.Items.Clear();
                //}
                //var temp = con.TBL_COURS.Join(con.TBL_SPE_COURS.Where(w => w.SPEC_ID == lect_id),
                //          c => c.COURS_ID,
                //          sp => sp.TBL_COURS.COURS_ID,
                //          (cours, cours_sp) =>
                //           new {
                //               cours.COURS_ID,
                //               cours.COURS_NAME,

                //           }).ToList();
                //if (temp.Count > 0)
                //{
                //    com_cours.DataSource = temp.ToList();
                //    com_cours.DisplayMember = "COURS_NAME";
                //    com_cours.ValueMember = "COURS_ID";
                //    com_cours.SelectedValue = stud_lect_id;
                //}

                //var data = con.TBL_YEARS.Where(w => w.SPEC_ID == lect_id).ToList();
                //if (data.Count > 0)
                //{
                //    com_year.DataSource = data;
                //    com_year.DisplayMember = "YEAR_NAME";
                //    com_year.ValueMember = "YEAR_ID";
                //}



            }

        }
        
        void add_marks()
        {

            tost toast = new tost();
            dialge dialge = new dialge();
            if (is_empty() != true)
            {
                //cheak add or edit 
                try
                {
                    TBL_MARKS cl = new TBL_MARKS();
                    cl.COURS_ID = cours_id ;
                    cl.SPEC_ID = spaicla_id;
                    cl.STUD_ID = stud_id;
                    cl.MARK_COURS=Convert.ToInt32(txt_mark_value.Text);
                    string aa = string.Format("{0:dd-MM-yyyy}", txt_mark_date.Value);
                    mark_date = DateTime.ParseExact(aa, "dd-MM-yyyy", null);
                    cl.MARK_YEAR = mark_date;
                  //  cl. =Convert.ToInt32(com_term.SelectedValue.ToString());
                    //cl.YEAR_ID= Convert.ToInt32(com_year.SelectedValue.ToString());
                    //cl.SPEC_ID= Convert.ToInt32(com_spiacl.SelectedValue.ToString());

                    if (id != 0)
                    {
                        //add 
                        cl.MARK_ID = Convert.ToInt32(id);
                        con.TBL_MARKS.AddOrUpdate(cl);
                        con.SaveChanges();
                        //toast.Width = this.Width;

                        adl.NotifictionUser notifiction = new adl.NotifictionUser(THAGBAN_INST.Properties.Resources.EditNotificationText, THAGBAN_INST.Properties.Resources.edit_32px);
                        notifiction.Show();
                        clear();
                        //MessageBox.Show("تم التعديل بنجاح ");
                    }
                    else
                    {
                        //update 
                        con.TBL_MARKS.AddOrUpdate(cl);
                        con.SaveChanges();
                       // toast.Width = this.Width;
                        toast.lbl_mess.Text = "تم الاضافه ينجاح  بنجاح";
                        toast.Show();
                        clear();

                    }
                }
                catch (Exception ex)
                {

                  //  dialge.Width = this.Width;
                    dialge.lbl_mess.Text = ex.Message;
                    dialge.Show();
                }
                clear();
            }
            else
            {
              //  dialge.Width = this.Width;
                dialge.lbl_mess.Text = "الرجاء ادخال جميع البيانات ";
                dialge.Show();



            }


        }

        private void btn_save_Click(object sender, EventArgs e)
        {
            add_marks();
        }

        private void com_spiacl_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if(com_spiacl.SelectedValue!= null)
            {
                try
                {
                   
                    spaicla_id = Convert.ToInt32(com_spiacl.SelectedValue.ToString());
                  var data  = con.TBL_YEARS.Where(w => w.SPEC_ID == spaicla_id).ToList();
                    if (data.Count > 0)
                    {
                        com_year.DataSource = data;
                        com_year.DisplayMember = "YEAR_NAME";
                        com_year.ValueMember = "YEAR_ID";
                        if (id != 0)
                            com_cours.SelectedValue = cours_id;
                    }
                    else
                    {
                       // dialge.lbl_mess.Text = "لايوجد ";
                        com_year.Items.Clear();
                    }
                }catch(Exception ex)
                {

                }

            }
           
        }

        private void com_year_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_year.SelectedValue != null)
            {
                try
                {
                     year_id = Convert.ToInt32(com_year.SelectedValue.ToString());
                    var data= con.TBL_TERMS.Where(w => w.YEAR_ID == year_id && w.SPEC_ID == spaicla_id).ToList();
                    if (data.Count > 0)
                    {
                        com_term.DataSource = data.ToList();
                        com_term.DisplayMember = "TERM_NAME";
                        com_term.ValueMember = "TERM_ID";
                        if (groupBox1.Enabled == true)
                        {
                            get_cours();
                        }

                    }
                    else
                    {
                        dialge d = new dialge();
                        com_term.Items.Clear();
                        com_cours.DataSource = null;
                        com_cours.Items.Clear();
                        d.lbl_mess.Text = "ولايوجد مواد للسنه المحدده" +
                            "لم يتم اضافه اترام لهذا التخصص";
                        d.Show();
                    }
                }catch(Exception ex) { }

            }
         
        }

        private void ch_year_CheckedChanged(object sender, EventArgs e)
        {
            if(ch_year.Checked) {
                groupBox1.Enabled = true;
            
            }
            else
            {
                groupBox1.Enabled = false;
            }
        }

        
        private void com_stud_SelectionChangeCommitted(object sender, EventArgs e)
        {
            method methods=new method();
            if(com_stud.SelectedValue!= null)
            {
                try
                {
                    //  List<TBL_STUD_SPEC> tbl = new List<TBL_STUD_SPEC>();
                    stud_id = Convert.ToInt32(com_stud.SelectedValue.ToString());
                    // tbl = con.TBL_STUD_SPEC.Where(w=>w.STUD_ID==stud_id).ToList();



                    var temp1 = con.TBL_SPECIAL.Join(con.TBL_STUD_SPEC.Where(w => w.STUD_ID == stud_id ), sp => sp.SPEC_ID, stud_spe => stud_spe.TBL_SPECIAL.SPEC_ID, (spiec, stud_spic) => new
                    {
                        spiec.SPEC_NAME,
                        spiec.SPEC_ID,

                    }).ToList();
                    if (temp1.Count > 0 )
                    {
                        com_spiacl.DataSource = temp1;
                        com_spiacl.DisplayMember = "SPEC_NAME";
                        com_spiacl.ValueMember = "SPEC_ID";
                        if (id != 0)
                        {
                           

                            com_spiacl.SelectedValue = spaicla_id;
                        }
                       
                    }
                    else
                    {
                        com_spiacl.Items.Clear();
                    }
                   
                    var temp=con.TBL_COURS.Join(con.TBL_SPE_COURS.Where(w=>w.SPEC_ID==spaicla_id),
                        c => c.COURS_ID,
                        sp=>sp.TBL_COURS.COURS_ID,
                        (cours,cours_sp)=>
                         new {
                             cours.COURS_ID,
                             cours.COURS_NAME,

                        }).ToList();
                    if (temp.Count > 0)
                    {
                        com_cours.DataSource = temp.ToList();
                        com_cours.DisplayMember = "COURS_NAME";
                        com_cours.ValueMember = "COURS_ID";
                        if (id != 0)
                            com_cours.SelectedValue = cours_id;
                    }
                    else
                    {
                        dialge d = new dialge();
                        com_cours.Items.Clear();
                        d.lbl_mess.Text = "ولايوجد مواد للتخصص المحدد";

                        d.Show();

                    }
                    // com_cours.SelectedValue = stud_lect_id;

                }catch(Exception ex)
                {

                }

            }
        }

        private void com_term_SelectionChangeCommitted(object sender, EventArgs e)
        {

          

        }

        void get_cours()
        {
            var data = con.TBL_COURS
                       .Join(con.TBL_SPE_COURS.Where(w => w.SPEC_ID == spaicla_id && w.TERM_ID == term_id
                       && w.YEAR_ID == year_id),
                       c => c.COURS_ID,
                       spc => spc.TBL_COURS.COURS_ID, (cours, sp_cours) => new
                       {
                           cours.COURS_ID,
                           cours.COURS_NAME,
                       }).ToList();

            if (data.Count > 0)
            {
                com_cours.DataSource = data.ToList();
                com_cours.DisplayMember = "COURS_NAME";
                com_cours.ValueMember = "COURS_ID";
                
                com_cours.SelectedValue = cours_id;
            }
            else
            {
                com_cours.DataSource = null;
                com_cours.Items.Clear();
                dialge d = new dialge();

                d.lbl_mess.Text = "ولايوجد مواد للترم المحدد";

                d.Show();

            }
        }
        private void com_term_SelectedValueChanged(object sender, EventArgs e)
        {
            if (com_term.SelectedValue != null)
            {
                try {
                    term_id = Convert.ToInt32(com_term.SelectedValue.ToString());
                    if (groupBox1.Enabled == true)
                    {
                        get_cours();
                    }

                }
                catch(Exception ex) { }
                }
        }

        private void com_term_DataSourceChanged(object sender, EventArgs e)
        {
            try
            {
                if(groupBox1.Enabled==true)
                {
                    get_cours();
                }
              

            }catch(Exception ex) { }
        }

        private void com_cours_SelectedValueChanged(object sender, EventArgs e)
        {
           
        }

        private void com_cours_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_cours.SelectedValue != null)
            {
                try
                {
                     cours_id = Convert.ToInt32(com_cours.SelectedValue.ToString());

                }
                catch (Exception ex) { }
            }

        }
    }
}