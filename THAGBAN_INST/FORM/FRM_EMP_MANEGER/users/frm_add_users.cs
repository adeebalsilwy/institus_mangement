using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Data.Entity.Migrations;
using System.Drawing;
using System.Linq;
using System.Runtime.Remoting.Contexts;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using THAGBAN_INST.DATA;
using THAGBAN_INST.FORM.FRM_EMP_MANEGER.lsits;
using THAGBAN_INST.FORM.FRM_LECTUER_MANG;

namespace THAGBAN_INST.FORM.FRM_EMP_MANEGER.users
{
    public partial class frm_add_users : DevExpress.XtraEditors.XtraForm
    {

        db_max_instEntities con = new db_max_instEntities();
        tost toast = new tost();
        dialge dialge = new dialge();
        public int emp_id=0;
        public int user_id=0;
        public int job_id=0;
        public string job_name;
        public string emp_name;
        public string user_name;
        public string user_pass;
        public int dept_id;
        public string dept_name;
        int temp_dept_id = 0;
        int temp_emp_id = 0;
        int temp_job_id = 0;



        public frm_add_users()
        {
            InitializeComponent();
        }

        private void btn_delete_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void frm_add_job_Load(object sender, EventArgs e)
        {


            List<TBL_USERS> list = new List<TBL_USERS>();

            TBL_USERS tbl = new TBL_USERS();
           
            if (user_id != 0)
            {
                get_dept();
                com_dept.SelectedValue = dept_id;
                com_emp.SelectedValue = emp_id;
                com_emp.Text = emp_name;
                com_dept.Text = dept_name;
                com_job.Text = job_name;
                com_job.SelectedValue = job_id;

                txt_user_name.Text = user_name;
                txt_user_pass.Text = user_pass;


            }else if (emp_id != 0)
            {

                try
                {
                    tbl = con.TBL_USERS.Where(w => w.EMP_ID == emp_id).FirstOrDefault();
                    if (tbl != null)
                    {

                        user_id = tbl.USER_ID;
                        user_name = tbl.USER_NAME;
                        user_pass = tbl.USER_PASS;
                        temp_emp_id = emp_id;
                        temp_job_id = Convert.ToInt32(tbl.TBL_EMPLOYEES.JOB_ID);
                        temp_dept_id = Convert.ToInt32(tbl.TBL_EMPLOYEES.TBL_JOB.DEPT_ID);

                        get_dept();
                        //com_dept.SelectedValue = dept_id;
                        txt_user_name.Text = user_name;
                        txt_user_pass.Text = user_pass;
                    }
                    else
                    {
                        get_dept();
                    }

                }
                catch (Exception ex)
                {
                    tbl = null;
                }
                
            }
           
          
        

           
        }
      
        public void get_emp()
        {


          
                com_emp.DataSource = con.TBL_EMPLOYEES.Where(w=>w.JOB_ID==job_id && w.STATE==true).ToList();
                com_emp.DisplayMember = "EMP_NAME";
                com_emp.ValueMember = "EMP_ID";
               
            if (temp_emp_id != 0)
                com_emp.SelectedValue = temp_emp_id;
          

        }
        public void get_dept()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            db_max_instEntities dbContext = new db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
           
                // Bind data to control when loading complete
                com_dept.DataSource = con.TBL_DEPT.ToList();
                com_dept.DisplayMember = "DEPT_NAME";
                com_dept.ValueMember = "DEPT_ID";
            if(emp_id!=0)
                com_dept.SelectedValue = temp_dept_id;
        }
        public void get_job()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            db_max_instEntities dbContext = new db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
           
                // Bind data to control when loading complete
                com_job.DataSource = con.TBL_JOB.Where(W => W.DEPT_ID == dept_id).ToList();
                com_job.DisplayMember = "JOB_NAME";
                com_job.ValueMember = "JOB_ID";
            if (emp_id != 0)
                com_job.SelectedValue = temp_job_id;

        }
        void clear()
        {
            dept_id =0;
            emp_id = 0;
            txt_user_pass.Text = "";
            txt_user_name.Text = "";
            com_dept.Text = "";
            com_emp.Text = "";
            com_job.Text = "";


        }
        bool is_empty()
        {
            if (txt_user_pass.Text != "" && txt_user_name.Text != "" && emp_id !=0)
            {
                user_name = txt_user_name.Text.Trim();
                user_pass=txt_user_pass.Text.Trim();

                return false;
            }
            else
                return true;

        }

        void add_dept()
        {

            tost toast = new tost();
            dialge dialge = new dialge();
            if (is_empty() != true)
            {
                //cheak add or edit 
                try
                {
                    TBL_USERS cl = new TBL_USERS();
                    cl.USER_NAME = user_name;
                    cl.USER_PASS = user_pass;
                    cl.EMP_ID= emp_id;

                    if (user_id != 0)
                    {
                        //add 
                        cl.USER_ID = Convert.ToInt32(user_id);
                        con.TBL_USERS.AddOrUpdate(cl);
                        con.SaveChanges();
                        toast.Width = this.Width;

                        adl.NotifictionUser notifiction = new adl.NotifictionUser(THAGBAN_INST.Properties.Resources.EditNotificationText, THAGBAN_INST.Properties.Resources.edit_32px);
                        notifiction.Show();
                        clear();
                        //MessageBox.Show("تم التعديل بنجاح ");
                    }
                    else
                    {
                        //update 
                        con.TBL_USERS.AddOrUpdate(cl);
                        con.SaveChanges();
                        adl.NotifictionUser notifiction = new adl.NotifictionUser(THAGBAN_INST.Properties.Resources.AddNotificationText, THAGBAN_INST.Properties.Resources.add_32px);
                        notifiction.Show();
                        clear();

                    }
                }
                catch (Exception ex)
                {

                  //  dialge.Width = this.Width;
                    dialge.lbl_mess.Text ="قد تم عمل اسم مستخدم لهذا الموظف من قبل "+ ex.Message;
                    dialge.Show();
                }
               
            }
            else
            {
                dialge.Width = this.Width;
                dialge.lbl_mess.Text = "الرجاء ادخال جميع البيانات ";
                dialge.Show();



            }


        }

        private void btn_save_Click(object sender, EventArgs e)
        {
            add_dept();
        }

        private void com_dept_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_dept.SelectedItem != null)
            {
                try
                {
                    dept_id = Convert.ToInt32(com_dept.SelectedValue.ToString());
                    get_job();
                }catch (Exception ex)
                {

                }
            }
          
        }

        private void com_job_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_job.SelectedItem != null)
            {
                try
                {
                    job_id = Convert.ToInt32(com_job.SelectedValue.ToString());

                    get_emp();
                }catch(Exception ex) { }
            }
           
        }

        private void com_emp_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_emp.SelectedItem != null)
            {
                try
                {
                    emp_id = Convert.ToInt32(com_emp.SelectedValue.ToString());
                }catch (Exception ex) { }
            }
        }

        private void btn_emp_list_Click(object sender, EventArgs e)
        {
            emp_list frm = new emp_list();
            frm.ShowDialog(this);
            emp_id = frm.emp_id;
            com_emp.Text = frm.emp_name;
        }

        private void btn_dept_list_Click(object sender, EventArgs e)
        {
            dept_list frm = new dept_list();
            frm.ShowDialog(this);
            dept_id = frm.dept_id;
            com_dept.Text = frm.dept_name;
            dept_name = frm.dept_name;
        }

        private void btn_jon_list_Click(object sender, EventArgs e)
        {
            job_list frm = new job_list();
            frm.ShowDialog(this);
            job_id = frm.job_id;
            com_job.Text = frm.job_name;
            job_name = frm.job_name;
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            clear();
        }
    }
}