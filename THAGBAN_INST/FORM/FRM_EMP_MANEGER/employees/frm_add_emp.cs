using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Data.Entity.Migrations;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using THAGBAN_INST.DATA;
using THAGBAN_INST.FORM.FRM_EMP_MANEGER.job;
using THAGBAN_INST.FORM.FRM_EMP_MANEGER.lsits;
using THAGBAN_INST.FORM.FRM_EMP_MANEGER.users;

namespace THAGBAN_INST.FORM.FRM_EMP_MANEGER.employees
{
    public partial class frm_add_emp : DevExpress.XtraEditors.XtraForm
    {

        db_max_instEntities con = new db_max_instEntities();
        tost toast = new tost();
        dialge dialge = new dialge();
        public int job_id=0;
        public int dept_id=0;
        public int emp_id = 0;

        public string dept_name;
        public string job_name;
        public string emp_name;
        public string emp_phone;
        public string emp_address;
        public string emp_gender;
        public string emp_salary;
        public DateTime emp_date;

        public string emp_desc;
        public frm_add_emp()
        {
            InitializeComponent();
        }

        private void btn_delete_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
         
        }

        public void get_dept()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            db_max_instEntities dbContext = new db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TBL_DEPT.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                com_dept.DataSource = dbContext.TBL_DEPT.Local.ToBindingList();
                com_dept.DisplayMember = "DEPT_NAME";
                com_dept.ValueMember = "DEPT_ID";
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

           
        }

        public void get_job()
        {
            List<TBL_JOB> list;

            try
            {
                // This line of code is generated by Data Source Configuration Wizard
                // Instantiate a new DBContext
                db_max_instEntities dbContext = new db_max_instEntities();
                // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
                dbContext.TBL_JOB.LoadAsync().ContinueWith(loadTask =>
                {
                    // Bind data to control when loading complete
                    list = dbContext.TBL_JOB.Local.Where(w=>w.DEPT_ID==dept_id).ToList();
                    if (list.Count > 0)
                    {
                        com_job.DataSource = list;
                        com_job.DisplayMember = "JOB_NAME";
                        com_job.ValueMember = "JOB_ID";
                    }
                    else
                    com_job.DataSource = null;
                    com_job.Text = "";
                }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

            }
            catch
            {

                dialge dialge = new dialge();
                dialge.Width = this.Width;
                dialge.lbl_mess.Text = "لا توجد وضائف في هذا القسم بعد يرجى اضافتها  ";
                dialge.Show();
            }
        }


        void clear()
        {
            dept_id =0;
            job_id = 0;
            txt_emp_address.Text = "";
            txt_emp_date.Value = DateTime.Now;
            txt_emp_desc.Text = "";
            txt_emp_name.Text = "";
            txt_emp_phone.Text = "";
            txt_emp_salary.Text = "";




        }
        bool is_empty()
        {
            if (txt_emp_name.Text != "" && txt_emp_phone.Text != "" && txt_emp_salary.Text!=""  && txt_emp_address.Text != "" && com_dept.Text != ""&& com_job.Text != "")
            {
                return false;
            }
            else
                return true;

        }

        void add_emp()
        {

            tost toast = new tost();
            dialge dialge = new dialge();
            if (is_empty() != true)
            {
                //cheak add or edit 
                try
                {
                    TBL_EMPLOYEES cl = new TBL_EMPLOYEES();
                    cl.STATE = true;
                    cl.EMP_ADDRESS = txt_emp_address.Text;
                    cl.EMP_NAME =txt_emp_name.Text ;
                    cl.EMP_PHONE = txt_emp_phone.Text;
                    cl.EMP_SALARY =float.Parse(txt_emp_salary.Text);
                    cl.JOB_ID =job_id;
                        cl.EMP_GENDER = emp_gender;
                     string aa = string.Format("{0:dd-MM-yyyy}", txt_emp_date.Value);
                    emp_date = DateTime.ParseExact(aa, "dd-MM-yyyy", null);
                    cl.EMP_DATE = emp_date.Date;
                    cl.EMP_DESC = txt_emp_desc.Text ;
                   
                    if (emp_id != 0)
                    {
                        //add 
                        cl.EMP_ID = Convert.ToInt32(emp_id);
                        con.TBL_EMPLOYEES.AddOrUpdate(cl);
                        con.SaveChanges();

                        adl.NotifictionUser notifiction = new adl.NotifictionUser(THAGBAN_INST.Properties.Resources.EditNotificationText, THAGBAN_INST.Properties.Resources.edit_32px);
                        notifiction.Show();
                        clear();
                        //MessageBox.Show("تم التعديل بنجاح ");
                    }
                    else
                    {
                        //update 
                        con.TBL_EMPLOYEES.AddOrUpdate(cl);
                        con.SaveChanges();
                        frm_add_users frm = new frm_add_users();
                        frm.emp_id = cl.EMP_ID;
                        frm.ShowDialog();
                        adl.NotifictionUser notifiction = new adl.NotifictionUser(THAGBAN_INST.Properties.Resources.AddNotificationText, THAGBAN_INST.Properties.Resources.add_32px);
                        notifiction.Show();
                        clear();

                    }
                }
                catch (Exception ex)
                {


                    dialge.Width = this.Width;
                    dialge.lbl_mess.Text ="تاكد من ادخال البيانات بالشكل الصحيح ";
                    dialge.Show();
                }
              
            }
            else
            {
                dialge.Width = this.Width;
                dialge.lbl_mess.Text = "الرجاء ادخال جميع البيانات ";
                dialge.Show();



            }


        }

        void cheack()
        {

            if (ch_mal.Checked == true)
            {

              
                emp_gender = "ذكر";
            }
            else
                emp_gender = "انثى";

        }
        private void frm_add_emp_Load(object sender, EventArgs e)
        {

           get_dept();
            cheack();

            if (emp_id != 0)
            {
                txt_emp_address.Text = emp_address;
                txt_emp_date.Value=emp_date;
                txt_emp_desc.Text = emp_desc;
                txt_emp_name.Text = emp_name;
                txt_emp_phone.Text = emp_phone;
                txt_emp_salary.Text = emp_salary;
                com_dept.Text = dept_name;
                com_job.Text = job_name;
                if(emp_gender=="ذكر")
                    ch_mal.Checked=true;
                else
                radioButton1.Checked=true;
                
            }

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {

            clear();
          

        }

        private void com_dept_SelectedIndexChanged(object sender, EventArgs e)
        {
            
        }

        private void com_dept_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (com_dept.SelectedItem != null)
            {
                dept_id = Convert.ToInt32(com_dept.SelectedValue.ToString());
                get_job();
            }
         
        }

        private void lbl_dept_Click(object sender, EventArgs e)
        {
            FRM_ADD_DEP frm = new FRM_ADD_DEP();
            frm.ShowDialog();
        }

        private void labelControl9_Click(object sender, EventArgs e)
        {
            frm_add_job frm = new frm_add_job();
            frm.ShowDialog(this);

        }

        private void btn_list_dept_Click(object sender, EventArgs e)
        {
            dept_list dep = new dept_list();
            dep.ShowDialog(this);
            dept_id= dep.dept_id;
            com_dept.Text = dep.dept_name;
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            job_list job_List = new job_list();
            job_List.ShowDialog(this);
            com_job.Text=job_List.job_name;
            job_id= job_List.job_id;
        }

        private void ch_mal_CheckedChanged(object sender, EventArgs e)
        {
            //if (ch_mal.Checked == true)
            //{

            //    ch_fmel.Checked = false;
            //    stud_gender = "ذكر";
            //}
            //else
            //    ch_fmel.Checked = true;
            cheack();


        }

        private void ch_fmel_CheckedChanged(object sender, EventArgs e)
        {
            //    if (ch_fmel.Checked == true)
            //    {

            //        ch_mal.Checked = false;
            //        stud_gender = "انثى";
            //    }
            //    else
            //        ch_mal.Checked = true;
            cheack();


    }

    private void btn_save_Click(object sender, EventArgs e)
        {
            add_emp();

        }

        private void com_job_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if(com_job.SelectedItem != null)
            {
                job_id = Convert.ToInt32(com_job.SelectedValue);
            }
        }

        private void ch_mal_CheckedChanged_1(object sender, EventArgs e)
        {
            cheack();
        }

        private void ch_fmel_CheckedChanged_1(object sender, EventArgs e)
        {
            cheack();
        }

        private void frm_add_emp_KeyDown(object sender, KeyEventArgs e)
        {
        }

        private void ch_mal_CheckedChanged_2(object sender, EventArgs e)
        {
            cheack();
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            cheack();
        }

        private void txt_emp_name_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                SendKeys.Send("{TAB}");
            }
            else
                return;
        }
    }
}