using DevExpress.Data;
using DevExpress.DataAccess.Excel;
using DevExpress.Office.Utils;
using DevExpress.Utils.Extensions;
using DevExpress.XtraEditors;
using DevExpress.XtraRichEdit.Model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Data.Entity.Migrations;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using THAGBAN_INST.adl;
using THAGBAN_INST.DATA;
using THAGBAN_INST.FORM.FRM_LECTUER_MANG.lect_report;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Button;

namespace THAGBAN_INST.FORM.FRM_LECTUER_MANG.students
{
    public partial class frm_import_stud : DevExpress.XtraEditors.XtraForm
    {
        public string emp_name;
        public int emp_id;
        int lect_id = 0;
        db_max_instEntities con = new db_max_instEntities();
        public frm_import_stud()
        {
            InitializeComponent();



            // This line of code is generated by Data Source Configuration Wizard
            // Fill the ExcelDataSource asynchronously
            excelDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the ExcelDataSource asynchronously
            excelDataSource1.FillAsync();
        }
        void import_fromaxcel()
        {

            try
            {
                OpenFileDialog folder = new OpenFileDialog();
                var rs = folder.ShowDialog();
                if (rs == DialogResult.OK)
                {



                    var file_Name = folder.FileName;
                    DevExpress.DataAccess.Excel.ExcelDataSource myExcelSource = new DevExpress.DataAccess.Excel.ExcelDataSource();
                    myExcelSource.FileName = file_Name;
                    lbl_path.Text = file_Name;
                    ExcelWorksheetSettings worksheetSettings = new ExcelWorksheetSettings("Sheet", "A1:L13");
                    myExcelSource.SourceOptions = new ExcelSourceOptions(worksheetSettings);
                    //or
                    //  myExcelSource.SourceOptions = new CsvSourceOptions() { CellRange = "A1:L100" };
                    myExcelSource.SourceOptions.SkipEmptyRows = true;
                    myExcelSource.SourceOptions.UseFirstRowAsHeader = true;



                    //  list.AsEnumerable();
                    // myExcelSource.Fill((IEnumerable<IParameter>)data);
                    myExcelSource.Fill();


                    gridControl1.DataSource = myExcelSource;
                  //  MessageBox.Show("تم  الاستيراد بنجاح");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                //  MessageBox.Show("خطأ , لا يمكن النسخ الاحتياطي الى المسار المحدد, الرجاء تحديد مسار مختلف, تذكر لا تحدد القرص C");
            }


        }

        private void job_list_Load(object sender, EventArgs e)
        {
            cheack_change();
            get_lect();
        }



        void get_sele()
        {
            if (gridView2.SelectedRowsCount > 0)
            {


                emp_name = gridView2.GetFocusedRowCellValue("EMP_NAME").ToString();
                emp_id = Convert.ToInt32(gridView2.GetFocusedRowCellValue("EMP_ID").ToString());


            }
        }


        private void gridView2_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {

        }

        private void btn_brows_Click(object sender, EventArgs e)
        {
            import_fromaxcel();
        }

        private async Task simpleButton1_ClickAsync(object sender, EventArgs e)
        {


        }

        void add_studAsync()
        {
           
            int stag = update_data();


        }
        int count_add = 0;
        int count_delte = 0;
        private int stud_lect_id;
        private object temp_tech_lect_id;
        private int tech_lect_id;
        List<int> array_stud=new List<int>();

    
        int update_data()
        {
            count_add = 0;
            count_delte = 0;
            bool move_lect = false;

            bool  import_studnt_without= false;
            if (ch_lect.Checked==true && ch_grou.Checked == true)
            {
                DialogResult res = MessageBox.Show("سيتم استيراد جميع \nجميع الطلاب الى المستوى المحدد ", "تحذيرالاستيؤاد  ", MessageBoxButtons.OKCancel, MessageBoxIcon.Error);
                if (res == DialogResult.OK)
                {
                    move_lect = true;

                }
                else
                {
                    move_lect = false;
                }
            }
            else
            {
                DialogResult res1 = MessageBox.Show("هل تريد تاكيد الاستيراد \nسوف يتم استيراد الطلاب بدون اضافتهم الى دوره ", "تحذير الاستيراد ", MessageBoxButtons.OKCancel, MessageBoxIcon.Error);
                if (res1 == DialogResult.OK)
                {
                    import_studnt_without = true;
                }
                else
                {
                    import_studnt_without = false;
                }
            }
           
          
            for (int i = 0; i < gridView2.RowCount; i++)
            {
                TBL_STUDENTS tBL_STUDENTS = new TBL_STUDENTS();

                tBL_STUDENTS.STUD_NAME = gridView2.GetRowCellValue(i, gridView2.Columns[1]).ToString();
                tBL_STUDENTS.STUD_LNAME = gridView2.GetRowCellValue(i, gridView2.Columns[2]).ToString();


                // stud.STUD_ADDRESS = (string)gridView2.GetRowCellValue(i, "العنوان");
                tBL_STUDENTS.STUD_ADDRESS = gridView2.GetRowCellValue(i, gridView2.Columns[3]).ToString();
                tBL_STUDENTS.STUD_GENDER = (string)gridView2.GetRowCellValue(i, gridView2.Columns[4]).ToString();
                tBL_STUDENTS.STUD_PHONE = gridView2.GetRowCellValue(i, gridView2.Columns[5]).ToString();
                tBL_STUDENTS.STUD_DATE = DateTime.Parse(gridView2.GetRowCellValue(i, gridView2.Columns[6]).ToString());


                tBL_STUDENTS.STUD_STATE = true;
                bool cheack_add = true;
                foreach (var stude in con.TBL_STUDENTS.ToList())
                {
                    if (import_studnt_without == false && move_lect==false)
                    {
                        cheack_add = false;
                    }
                   
                     if (stude.STUD_NAME == tBL_STUDENTS.STUD_NAME && stude.STUD_LNAME == tBL_STUDENTS.STUD_LNAME)
                    {
                        cheack_add = false;
                        count_delte++;

                        break;
                    }
                    //  MessageBox.Show(tBL_STUDENTS.STUD_ADDRESS);
                }




                if (cheack_add == true)
                {
                    try
                    {
                        
                        con.TBL_STUDENTS.Add(tBL_STUDENTS);

                       con.SaveChanges();
                        count_add++;
                        if (move_lect==true)
                        {
                          // MessageBox.Show(tBL_STUDENTS.STUD_ID.ToString());
                            int stud_id = Convert.ToInt32(tBL_STUDENTS.STUD_ID.ToString());
                            array_stud.Add(stud_id);
                          
                        }
                    }
                    catch (Exception ex)
                    {
                        count_delte++;
                    }

                }
            }
           
                MessageBox.Show("الطلاب المضافين " + count_add + "");
                MessageBox.Show("الطلاب المكررين " + count_delte + "");
            
           
            return count_add;
        }





        private void gridView2_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {


            //     MessageBox.Show(gridView2.GetRowCellValue(0, gridView2.Columns[3]).ToString());

        }

      
        void add_lect_stud(int stud_id)
        {
            TBL_STUD_LECT cl = new TBL_STUD_LECT();
            // cl.LECT_ID = com_stud.Text;

            try
            {
                cl.LECT_TECH_ID = Convert.ToInt32(com_group.SelectedValue);
                //lect_id=

                //TBL_LECT_TECH_COURS tbl=con.TBL_LECT_TECH_COURS.Find(lect_id);
                lect_id = Convert.ToInt32(com_lect.SelectedValue);
                cl.LECT_ID = lect_id;

                cl.COURS_ID = con.TBL_LECTUER.Find(lect_id).LECT_COURS_ID;
                cl.STUD_ID = stud_id;
                string aa = string.Format("{0:dd-MM-yyyy}", DateTime.Now);

                cl.LECT_STUD_DATE = DateTime.ParseExact(aa, "dd-MM-yyyy", null); ;

                con.TBL_STUD_LECT.AddOrUpdate(cl);
                con.SaveChanges();
               

            }
            catch(Exception ex)
            {

            }
          
               
            }
        
        private void simpleButton1_Click(object sender, EventArgs e)
        {

            if (gridView2.RowCount > 0)
            {
                add_studAsync();
                if (array_stud.Count > 0)
                {
                    foreach (int id in array_stud)
                    {
                        // MessageBox.Show(id.ToString());
                        add_lect_stud(id);
                    }


                }
            }
           
          
        }

        private void ch_lect_CheckedChanged(object sender, EventArgs e)
        {
            cheack_change();
        }
        void get_lect()
        {
            var tbl = con.TBL_LECT_TECH_COURS.Where(w => w.STATE == true)
                .Join(con.TBL_LECTUER, l => l.TBL_LECTUER.LECT_ID, tl => tl.LECT_ID,
                (l, tl) => new
                {

                    l.LECT_ID,

                    tl.LECT_NAME,

                }).Distinct();


            if (tbl != null)
            {
                com_lect.DataSource = tbl.ToList();
                com_lect.DisplayMember = "LECT_NAME";
                com_lect.ValueMember = "LECT_ID";
            }
            else
            {
                com_lect.DataSource = null;
                com_lect.Items.Clear();
                com_lect.Text = "";
            }
        }
        void get_group(int lect)
        {


            lect_id = Convert.ToInt32(com_lect.SelectedValue);
            var temp = con.TBL_LECT_TECH_COURS.Where(w => w.LECT_ID == lect).ToList();
            if (temp != null)
            {
                com_group.DataSource = temp;
                com_group.DisplayMember = "GROUP_NAME";
                com_group.ValueMember = "TECH_LECT_ID";

            }
            else
            {
                com_group.DataSource = null;
                com_group.Items.Clear();
                com_group.Text = "";
            }


        }
        void cheack_change()
        {

            if (ch_lect.Checked)
            {
                com_lect.Enabled = true;
               
            }
            else
            {
                com_lect.Enabled = false;
            }
            if (ch_grou.Checked)
            {
                com_group.Enabled = true;
               

            }
            else
            {
                
                com_group.Enabled = false;
            }

        }

        private void ch_grou_CheckedChanged(object sender, EventArgs e)
        {
            cheack_change();
        }

        private void com_lect_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (com_lect.SelectedValue != null)
            {
                try
                {
                    lect_id = Convert.ToInt32(com_lect.SelectedValue);
                    ch_grou.Checked = true;
                    get_group(lect_id);
                   // simpleButton1.Enabled = false;
                }
                catch (Exception ex)
                {

                }
            }
        }

        private void com_group_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (com_group.SelectedValue != null)
            {
                try
                {
                    tech_lect_id = Convert.ToInt32(com_group.SelectedValue);

                }
                catch (Exception ex)
                {

                }
            }
        }

        private void frm_import_stud_Activated(object sender, EventArgs e)
        {
           
        }
    }
    }